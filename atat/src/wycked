#!/bin/bash
atatdir=$(sed 's/.*=\(.*\)/\1/g' ~/.atat.rc)

if [[ $# -eq 0 || "x$1" == "x-h" ]]
then
  cat - <<-EOF
WYCKoff position EDitor, by Axel van de Walle
Syntax:
  wycked [spcgrp] [list_of_wyckoff_position_letter_without_seperators]
The output is meant to first be edited to set the free parameters a,b,c,alpha,beta,gamma,x,y,z,etc
in each of the lines starting with #const 
and processed by sspp to create a valid ATAT structure file.

ACKNOWLEDGEMENTS
This code makes use of a Wyckoff position database downloaded from the Bilbao Crystallographic Server
at http://www.cryst.ehu.es/
Accordingly, if you use this code, you should cite, in addition to the usual ATAT citations,
the following papers:
  M. I. Aroyo, J. M. Perez-Mato, D. Orobengoa, E. Tasci, G. de la Flor, A. Kirov
      "Crystallography online: Bilbao Crystallographic Server" 
      Bulg. Chem. Commun. 43(2) 183-197 (2011).
  M. I. Aroyo, J. M. Perez-Mato, C. Capillas, E. Kroumova, S. Ivantchev, G. Madariaga,
  A. Kirov and H. Wondratschek,
      "Bilbao Crystallographic Server I: Databases and crystallographic computing programs" 
      Z. Krist. 221, 1, 15-27 (2006). doi:10.1524/zkri.2006.221.1.15 
  M. I. Aroyo, A. Kirov, C. Capillas, J. M. Perez-Mato and H. Wondratschek
      "Bilbao Crystallographic Server II: Representations of crystallographic point groups and
      space groups", Acta Cryst. A62, 115-128 (2006). doi:10.1107/S0108767305040286 
EOF
exit
fi

sgonly=$(echo $1 | sed 's/s[12]//g')
sgset=$(echo $1 | sed 's/^[^s]*//g')

spcgrpdata=($(awk '{if ($1=='\"$sgonly\"' || $2=='\"$sgonly\"') {print $1,$3,$4;}}' ${atatdir}/data/wyckoff/spcgrp.txt) )

if [[ ${#spcgrpdata} == 0 ]]
then
  echo "Space Group $sgonly not found."
  exit 1
fi

sgnum=${spcgrpdata[0]}
sgaxes=${spcgrpdata[1]}
sgcell=${spcgrpdata[2]}

cat ${atatdir}/data/wyckoff/axes_${sgaxes}.txt
cat ${atatdir}/data/wyckoff/cell_${sgcell}.txt

for ((i=0 ; i < ${#2} ; i++))
do
  site=${2:i:1}
  grep ${site}\$ ${atatdir}/data/wyckoff/wyckoff${sgnum}${sgset}.txt | awk '{print "{"$1"}","{"$2"}","{"$3"}","{"toupper($4)"}"}' >| wycktmp${$}.tmp
  echo -n "#const "
  for pvar in x y z
  do
     grep -q "$pvar" wycktmp${$}.tmp && echo -n "${pvar}=; "
  done
  #echo ${site^}=\"${site^}\"\;
  echo ${site} | awk '{print toupper($1)"=\"" toupper($1) "\";"}'
  cat wycktmp${$}.tmp
done
rm -f wycktmp${$}.tmp
